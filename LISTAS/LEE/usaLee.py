import Lee

l = Lee.Lee(5)

print('==============================================')
print('lista:')
print('==============================================')
l.show() 
l.show_vetor()
print('==============================================')
print()
 
print('==============================================')
l.inserir_inicio('C') 
print('lista após inserir início C: (esperado - C)')
print('==============================================')
l.show() 
l.show_vetor() 
print('==============================================')
print()
 
print('==============================================')
l.inserir_inicio('D') 
print('lista após inserir início D: (esperado - DC)')
print('==============================================') 
l.show() 
l.show_vetor()
print('==============================================')
print()

print('==============================================')
l.inserir_fim('B') 
print('lista após inserir fim B: (esperado - DCB)') 
print('==============================================')
l.show() 
l.show_vetor()
print('==============================================')
print()

print('==============================================')
l.remover_inicio() 
print('lista após remover início: (esperado - CB)') 
print('==============================================')
l.show() 
l.show_vetor() 
print('==============================================')
print()

print('==============================================')
l.inserir_fim('F') 
print('lista após inserir fim F: (esperado - CBF)') 
print('==============================================')
l.show() 
l.show_vetor()
print('==============================================')
print()

print('==============================================')
l.inserir_inicio('E') 
print('lista após inserir início E: (esperado - ECBF)') 
print('==============================================')
l.show() 
l.show_vetor()
print('==============================================')
print()

print('==============================================')
l.remover_fim() 
print('lista após remover fim: (esperado - ECB)') 
print('==============================================')
l.show() 
l.show_vetor()
print('==============================================')
print()

print('==============================================')
print('buscar "C": posição encontrada (esperado - 1)')
print(l.buscar("C"))
print('buscar "X": posição encontrada (esperado - None)')
print(l.buscar("X"))
print('==============================================')
print()

print('==============================================')
l.inserir_apos('F', 'C')
print('lista após inserir F após C: (esperado - E C F B)')
print('==============================================')
l.show()
l.show_vetor()
print('==============================================')
print()

print('==============================================')
l.inserir_antes('D', 'B')
print('lista após inserir D antes de B: (esperado - E C F D B)')
print('==============================================')
l.show()
l.show_vetor()
print('==============================================')
print()

print('==============================================')
l.remover_elemento('E')
print('lista após remover E: (esperado - C F D B)')
print('==============================================')
l.show()
l.show_vetor()
print('==============================================')
print()

print('==============================================')
l.remover_elemento('B')
print('lista após remover B: (esperado - C F D)')
print('==============================================')
l.show()
l.show_vetor()
print('==============================================')
print()
